[{"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\index.js":"1","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\App.js":"2","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\store.js":"3","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\utils\\setAuthToken.js":"4","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\routing\\PrivateRoute.js":"5","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Records\\AddNew.js":"6","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Drives\\Drives.js":"7","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Drives\\NewDrive.js":"8","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Auth\\Login.js":"9","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Records\\StudentDetail.js":"10","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Layout\\Home.js":"11","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Records\\Records.js":"12","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\actions\\auth.js":"13","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\reducers\\index.js":"14","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\actions\\records.js":"15","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Layout\\Alert.js":"16","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Layout\\Loader.js":"17","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\actions\\drives.js":"18","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Drives\\Drive.js":"19","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Layout\\Navbar.js":"20","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\actions\\filters.js":"21","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Records\\DataTable.js":"22","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Layout\\Backdrop.js":"23","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Layout\\Menubar.js":"24","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\actions\\types.js":"25","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\actions\\alerts.js":"26","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\reducers\\filters.js":"27","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\reducers\\alerts.js":"28","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\reducers\\drives.js":"29","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\reducers\\auth.js":"30","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\reducers\\records.js":"31"},{"size":198,"mtime":1723835770130,"results":"32","hashOfConfig":"33"},{"size":1505,"mtime":1723835770106,"results":"34","hashOfConfig":"33"},{"size":432,"mtime":1723835770155,"results":"35","hashOfConfig":"33"},{"size":235,"mtime":1723835771413,"results":"36","hashOfConfig":"33"},{"size":501,"mtime":1723835770734,"results":"37","hashOfConfig":"33"},{"size":13907,"mtime":1723835770552,"results":"38","hashOfConfig":"33"},{"size":1491,"mtime":1723835770281,"results":"39","hashOfConfig":"33"},{"size":8223,"mtime":1723835770330,"results":"40","hashOfConfig":"33"},{"size":1934,"mtime":1723838784866,"results":"41","hashOfConfig":"33"},{"size":10066,"mtime":1723835770636,"results":"42","hashOfConfig":"33"},{"size":1409,"mtime":1723835770414,"results":"43","hashOfConfig":"33"},{"size":6715,"mtime":1723835770608,"results":"44","hashOfConfig":"33"},{"size":1367,"mtime":1723835770820,"results":"45","hashOfConfig":"33"},{"size":269,"mtime":1723835771107,"results":"46","hashOfConfig":"33"},{"size":1669,"mtime":1723835770923,"results":"47","hashOfConfig":"33"},{"size":398,"mtime":1723835770360,"results":"48","hashOfConfig":"33"},{"size":351,"mtime":1723835770439,"results":"49","hashOfConfig":"33"},{"size":2619,"mtime":1723835770853,"results":"50","hashOfConfig":"33"},{"size":3104,"mtime":1723835770255,"results":"51","hashOfConfig":"33"},{"size":874,"mtime":1723835770492,"results":"52","hashOfConfig":"33"},{"size":1180,"mtime":1723835770886,"results":"53","hashOfConfig":"33"},{"size":698,"mtime":1723835770577,"results":"54","hashOfConfig":"33"},{"size":190,"mtime":1723835770386,"results":"55","hashOfConfig":"33"},{"size":4510,"mtime":1723835770466,"results":"56","hashOfConfig":"33"},{"size":1216,"mtime":1723835770951,"results":"57","hashOfConfig":"33"},{"size":373,"mtime":1723835770785,"results":"58","hashOfConfig":"33"},{"size":1556,"mtime":1723835771082,"results":"59","hashOfConfig":"33"},{"size":417,"mtime":1723835770989,"results":"60","hashOfConfig":"33"},{"size":1187,"mtime":1723835771052,"results":"61","hashOfConfig":"33"},{"size":1143,"mtime":1723835771021,"results":"62","hashOfConfig":"33"},{"size":1475,"mtime":1723835771136,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"122h2op",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":6,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":11,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\index.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\App.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\store.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\routing\\PrivateRoute.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Records\\AddNew.js",["136"],"import React, { useState } from 'react'\nimport './AddNew.css'\nimport { connect } from 'react-redux'\nimport Alert from '../Layout/Alert'\nimport { addRecord } from '../../Redux/actions/records'\nconst AddNew = (props) => {\n    const [formData, setFormData] = useState({\n        Email_Address: '',\n        Student_Name: '',\n        Enrollment_No: null,\n        College: 'OIST',\n        Branch: 'CSE',\n        Gender: 'M',\n        DOB: '',\n        Contact_Number: null,\n        Father_Name: '',\n        Mother_Name: '',\n        Present_Address: '',\n        Permanent_Address: '',\n        Class_10th_per: null,\n        Year_of_Passing_10th: '',\n        _10th_Board: '',\n        Class_12th_per: null,\n        Year_of_Passing_12th: '',\n        _12th_Board: '',\n        Study_Gap: 0,\n        Current_CGPA_aggregate: null,\n        Number_of_Backlogs: 0,\n        Sem_1_SGPA: null,\n        Sem_2_SGPA: null,\n        Sem_3_SGPA: null,\n        Sem_4_SGPA: null,\n        Sem_5_SGPA: null\n    })\n    const { Email_Address, Student_Name, Enrollment_No, College, Branch, Gender, DOB,\n        Contact_Number, Father_Name, Mother_Name, Present_Address, Permanent_Address, Class_10th_per, Year_of_Passing_10th, Class_12th_per, Year_of_Passing_12th,\n        _10th_Board, _12th_Board, Study_Gap, Current_CGPA_aggregate, Number_of_Backlogs, Sem_1_SGPA, Sem_2_SGPA, Sem_3_SGPA, Sem_4_SGPA, Sem_5_SGPA\n    } = formData;\n    const changeHandler = e => {\n        setFormData({ ...formData, [e.target.name]: e.target.value })\n    }\n    const submitHandler = e => {\n        e.preventDefault();\n        props.addRecord(formData);\n        setFormData({\n            Email_Address: '',\n            Student_Name: '',\n            Enrollment_No: '',\n            College: 'OIST',\n            Branch: 'CSE',\n            Gender: 'M',\n            DOB: '',\n            Contact_Number: null,\n            Father_Name: '',\n            Mother_Name: '',\n            Present_Address: '',\n            Permanent_Address: '',\n            Class_10th_per: null,\n            Year_of_Passing_10th: '',\n            _10th_Board: '',\n            Class_12th_per: null,\n            Year_of_Passing_12th: '',\n            _12th_Board: '',\n            Study_Gap: 0,\n            Current_CGPA_aggregate: null,\n            Number_of_Backlogs: 0,\n            Sem_1_SGPA: null,\n            Sem_2_SGPA: null,\n            Sem_3_SGPA: null,\n            Sem_4_SGPA: null,\n            Sem_5_SGPA: null\n        });\n    }\n\n    return (\n        <body className=\"body1\">\n            <a onClick={() => props.history.goBack()} className=\"back a1\">&laquo; Back </a>\n            <div className=\"container\">\n                <div className=\"title\">New Record</div>\n                <hr />\n                <Alert />\n                <div className=\"content\">\n                    <form onSubmit={e => submitHandler(e)}>\n                        <div className=\"user-details\">\n                            <div className=\"input-box\">\n                                <span className=\"details\">Full Name</span>\n                                <input type=\"text\" onChange={e => changeHandler(e)} placeholder=\"Enter your name\"\n                                    name=\"Student_Name\" value={Student_Name} required />\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Email Id</span>\n                                <input type=\"email\"\n                                    name=\"Email_Address\" value={Email_Address}\n                                    onChange={e => changeHandler(e)} placeholder=\"Enter your mail id\" required />\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Enrollment No</span>\n                                <input type=\"text\"\n                                    name=\"Enrollment_No\" value={Enrollment_No} onChange={e => changeHandler(e)} placeholder=\"Enter your enroll no\" required />\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">College</span>\n                                <select name=\"College\" value={College} onChange={e => changeHandler(e)}>\n                                    <option name=\"OIST\" value=\"OIST\">OIST</option>\n                                    <option name=\"OCT\" value=\"OCT\">OCT</option>\n                                </select>\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Branch</span>\n                                <select name=\"Branch\" value={Branch} onChange={e => changeHandler(e)}>\n                                    <option value=\"CSE\">CSE</option>\n                                    <option value=\"IT\">IT</option>\n                                    <option value=\"EC\">EC</option>\n                                    <option value=\"ME\">ME</option>\n                                    <option value=\"AU\">AU</option>\n                                    <option value=\"EX\">EX</option>\n                                    <option value=\"CE\">CE</option>\n                                </select>\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Gender</span>\n                                <select name=\"Gender\" value={Gender} onChange={e => changeHandler(e)}>\n                                    <option value=\"M\">Male</option>\n                                    <option value=\"F\">Female</option>\n                                </select>\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Date Of Birth</span>\n                                <input type=\"date\"\n                                    name=\"DOB\" value={DOB} onChange={e => changeHandler(e)} placeholder=\"Enter your dob\" required />\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Contact Number</span>\n                                <input type=\"text\"\n                                    name=\"Contact_Number\" value={Contact_Number} onChange={e => changeHandler(e)} placeholder=\"Enter your phone no\" required />\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Father's Name</span>\n                                <input type=\"text\"\n                                    name=\"Father_Name\" value={Father_Name} onChange={e => changeHandler(e)} placeholder=\"Enter your father's name \" required />\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Mother's Name</span>\n                                <input type=\"text\"\n                                    name=\"Mother_Name\" value={Mother_Name} onChange={e => changeHandler(e)} placeholder=\"Enter your mother's name \" required />\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Present Address</span>\n                                <input type=\"text\"\n                                    name=\"Present_Address\" value={Present_Address} onChange={e => changeHandler(e)} placeholder=\"Enter your present address\" required />\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Permanent Address</span>\n                                <input type=\"text\"\n                                    name=\"Permanent_Address\" value={Permanent_Address}\n                                    onChange={e => changeHandler(e)} placeholder=\"Enter your permanent address\" required />\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Class X CGPA</span>\n                                <input type=\"text\"\n                                    name=\"Class_10th_per\" value={Class_10th_per}\n                                    onChange={e => changeHandler(e)} placeholder=\"Enter your 10th Cgpa\" required />\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Class X YOP</span>\n                                <input type=\"text\"\n                                    name=\"Year_of_Passing_10th\" value={Year_of_Passing_10th}\n                                    onChange={e => changeHandler(e)} placeholder=\"Enter your 10th yop\" required />\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Class X Board Name</span>\n                                <input type=\"text\"\n                                    value={_10th_Board} name=\"_10th_Board\"\n                                    onChange={e => changeHandler(e)} placeholder=\"Enter your 10th board\" required />\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Class XII Percentage</span>\n                                <input type=\"text\"\n                                    name=\"Class_12th_per\" value={Class_12th_per}\n                                    onChange={e => changeHandler(e)} placeholder=\"Enter your 12th percentage\" required />\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Class XII YOP </span>\n                                <input type=\"text\"\n                                    value={Year_of_Passing_12th} name=\"Year_of_Passing_12th\"\n                                    onChange={e => changeHandler(e)} placeholder=\"Enter your 12th yop\" required />\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Class XII Board Name</span>\n                                <input type=\"text\" onChange={e => changeHandler(e)} placeholder=\"Enter your 12th board\"\n                                    value={_12th_Board} name=\"_12th_Board\"\n                                    required />\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Study Gap</span>\n                                <input type=\"text\"\n                                    name=\"Study_Gap\" value={Study_Gap}\n                                    onChange={e => changeHandler(e)} placeholder=\"Enter your study gap\" required />\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Current Aggregate CGPA</span>\n                                <input type=\"text\" name=\"Current_CGPA_aggregate\" value={Current_CGPA_aggregate} onChange={e => changeHandler(e)} placeholder=\"Enter your avg cgpa\" required />\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">No of Backlogs</span>\n                                <input type=\"text\"\n                                    value={Number_of_Backlogs} name=\"Number_of_Backlogs\"\n                                    onChange={e => changeHandler(e)} placeholder=\"Enter your backlog\" required />\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Sem I SGPA</span>\n                                <input type=\"text\"\n                                    value={Sem_1_SGPA} name=\"Sem_1_SGPA\"\n                                    onChange={e => changeHandler(e)} placeholder=\"Enter your 1st sem sgpa\" required />\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Sem II SGPA</span>\n                                <input type=\"text\" value={Sem_2_SGPA} name=\"Sem_2_SGPA\" onChange={e => changeHandler(e)} placeholder=\"Enter your 2nd sem sgpa\" required />\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Sem III SGPA</span>\n                                <input type=\"text\" value={Sem_3_SGPA} name=\"Sem_3_SGPA\" onChange={e => changeHandler(e)} placeholder=\"Enter your 3rd sem sgpa\" required />\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Sem IV SGPA </span>\n                                <input type=\"text\" value={Sem_4_SGPA} name=\"Sem_4_SGPA\" onChange={e => changeHandler(e)} placeholder=\"Enter your 4th sem sgpa\" required />\n                            </div>\n                            <div className=\"input-box\">\n                                <span className=\"details\">Sem V SGPA </span>\n                                <input type=\"text\" value={Sem_5_SGPA} name=\"Sem_5_SGPA\" onChange={e => changeHandler(e)} placeholder=\"Enter your 5th sem sgpa\" required />\n                            </div>\n                        </div>\n                        <div>\n                            <input type=\"submit\" value=\"SUBMIT\" className=\"apply1\" />\n                        </div>\n                    </form>\n                </div>\n\n            </div>\n        </body>\n    )\n}\nexport default connect(null, { addRecord })(AddNew)\n","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Drives\\Drives.js",["137"],"import React, { useEffect, Fragment } from 'react'\nimport Drive from './Drive'\nimport { connect } from 'react-redux'\nimport { getDrives, saveEnroll, deleteDrive } from '../../Redux/actions/drives'\nimport NavBar from '../Layout/Navbar'\nimport { Link } from 'react-router-dom'\nimport Loader from '../Layout/Loader'\nimport Alert from '../Layout/Alert'\nconst Drives = ({ getDrives, saveEnroll, deleteDrive, drives: { drives, loading }, location }) => {\n    useEffect(() => {\n        getDrives();\n    }, [])\n    return (\n        <div>\n            <NavBar />\n            <Alert />\n            { loading ? <Fragment>\n                <br /> <Loader /> </Fragment> : (\n                <Fragment>\n                    <div class=\"MainBody\">\n                        <h2>Drives</h2>\n                        <br />\n                        <div class=\"New\">\n                            <h4>New Drive? <Link to=\"new-drive\">CREATE ONE</Link></h4>\n                        </div>\n                        <br />\n                    </div>\n                    <div class=\"CardHolder\">\n                        {drives.map(drive =>\n                            <Drive key={drive._id} drive={drive} enroll={saveEnroll} delete={deleteDrive} />\n                        )}\n                    </div>\n                </Fragment>\n            )}\n        </div>\n\n    )\n}\nconst mapStateToProps = state => ({\n    drives: state.drives\n})\nexport default connect(mapStateToProps, { getDrives, saveEnroll, deleteDrive })(Drives)\n","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Drives\\NewDrive.js",["138","139","140","141","142","143","144","145","146"],"import React, { useState, useEffect } from 'react'\nimport Navbar from '../Layout/Navbar'\nimport { connect } from 'react-redux'\nimport { getBranches, getColleges, getDriveFilter } from '../../Redux/actions/filters'\nimport { createDrive } from '../../Redux/actions/drives'\nimport { Multiselect } from 'multiselect-react-dropdown'\nimport Alert from '../Layout/Alert'\nimport './NewDrive.css'\nconst NewDrive = (props) => {\n    const [formData, setFormData] = useState({\n        companyName: '',\n        packages: 0,\n        branch: [],\n        course: [],\n        desc: '',\n        dateOfDrive: null,\n        ssc: null,\n        hsc: null,\n        graduation: null,\n        diploma: null,\n        placedIn: [],\n        belowPackage: 0\n    })\n    const {\n        companyName, packages, branch, course, desc, ssc, hsc, graduation,\n        diploma, placedIn, belowPackage\n    } = formData\n    useEffect(() => {\n        props.getBranches()\n    }, [])\n    useEffect(() => {\n        props.getColleges()\n    }, [])\n    useEffect(() => {\n        props.getDriveFilter()\n    }, [])\n\n    const changeHandler = e => {\n        setFormData({ ...formData, [e.target.name]: e.target.value })\n    }\n    const selectBranch = (selectedList, selectedItem) => {\n        setFormData({ ...formData, ['branch']: [...branch, selectedItem.label] })\n    }\n    const selectCollege = (selectedList, selectedItem) => {\n        setFormData({ ...formData, ['course']: [...course, selectedItem.label] })\n    }\n    const selectNotEligible = (selectedList, selectedItem) => {\n        setFormData({ ...formData, ['placedIn']: [...placedIn, selectedItem._id] })\n    }\n    const removeBranch = (selectedList, selectedItem) => {\n        setFormData({ ...formData, ['branch']: formData.branch.filter(branch => selectedItem.label !== branch) })\n    }\n    const removeCollege = (selectedList, selectedItem) => {\n        setFormData({ ...formData, ['course']: formData.course.filter(course => selectedItem.label !== course) })\n    }\n    const removeNotEligible = (selectedList, selectedItem) => {\n        setFormData({ ...formData, ['placedIn']: formData.placedIn.filter(notE => selectedItem._id !== notE) })\n    }\n    const submitHandler = (e) => {\n        e.preventDefault();\n        props.createDrive(formData);\n        setFormData({\n            companyName: '',\n            packages: 0,\n            branch: [],\n            course: [],\n            desc: '',\n            dateOfDrive: null,\n            ssc: null,\n            hsc: null,\n            graduation: null,\n            diploma: null,\n            placedIn: [],\n            belowPackage: 0\n        })\n    }\n    return (\n        <div>\n            <Navbar />\n            <Alert />\n            <div className=\"MainBody\">\n                <h2>Create a new drive</h2>\n                <br />\n                <form className=\"form\" onSubmit={e => submitHandler(e)}>\n                    <div className=\"DriveForm\">\n                        <div className=\"DriveForm-column\">\n                            <div className=\"Flex Flex-column DriveForm-column-compact\">\n                                <label>Company: </label>\n                                <input type=\"text\" name=\"companyName\" value={companyName}\n                                    onChange={e => changeHandler(e)} />\n                            </div>\n                            <div className=\"Flex Flex-column DriveForm-column-compact\">\n                                <label>Package: </label>\n                                <input type=\"number\" name=\"packages\" value={packages}\n                                    onChange={e => changeHandler(e)} />\n                            </div>\n                            <Multiselect\n                                style={{\n                                    searchBox: {\n                                        fontSize: 'smaller', width: '12rem', height: '3rem',\n                                        overflowY: 'scroll', borderRadius: '25px', overflowX: 'hidden'\n                                    }\n                                }} options={props.branch}\n                                displayValue=\"label\"\n                                loading={!props.branch}\n                                placeholder=\"Branch\"\n                                name='branch'\n                                showArrow\n                                onSelect={(selectedList, selectedItem) => selectBranch(selectedList, selectedItem)}\n                                onRemove={(selectedList, selectedItem) => removeBranch(selectedList, selectedItem)}\n                            />\n                            <br />\n                            <Multiselect style={{\n                                searchBox: {\n                                    fontSize: 'smaller', width: '12rem', height: '3rem',\n                                    overflowY: 'scroll', borderRadius: '25px', overflowX: 'hidden'\n                                }\n                            }} options={props.college}\n                                displayValue=\"label\"\n                                placeholder=\"College\"\n                                showArrow\n                                onSelect={(selectedList, selectedItem) => selectCollege(selectedList, selectedItem)}\n                                onRemove={(selectedList, selectedItem) => removeCollege(selectedList, selectedItem)}\n                            />\n                            <div className=\"Flex Flex-column DriveForm-column-compact\">\n                                <label>Description</label>\n                                <textarea style={{ resize: 'none' }} value={desc}\n                                    onChange={e => changeHandler(e)} name=\"desc\" rows=\"3\"></textarea>\n                            </div>\n                        </div>\n                        <div className=\"DriveForm-column DriveForm-column-border\">\n                            <h4>Eligibility:</h4>\n                            <input name=\"ssc\" placeholder=\"10th %\" value={ssc} onChange={(e) => changeHandler(e)} />\n                            <input name=\"hsc\" placeholder=\"12th %\" value={hsc} onChange={(e) => changeHandler(e)} />\n                            <input name=\"diploma\" placeholder=\"Diploma %\" value={diploma} onChange={(e) => changeHandler(e)} />\n                            <input name=\"graduation\" placeholder=\"Graduation CGPA\" value={graduation} onChange={(e) => changeHandler(e)} />\n                        </div>\n                        <div className=\"DriveForm-column DriveForm-column-border\">\n                            <h4>Not Eligible: </h4>\n                            <Multiselect style={{\n                                searchBox: {\n                                    fontSize: 'smaller', width: '12rem', height: '3rem',\n                                    overflowY: 'scroll', borderRadius: '25px', overflowX: 'hidden'\n                                }\n                            }} options={props.drives}\n                                displayValue=\"label\"\n                                showArrow\n                                hidePlaceHolder\n                                placeholder=\"Already place In\"\n                                onSelect={(selectedList, selectedItem) => selectNotEligible(selectedList, selectedItem)}\n                                onRemove={(selectedList, selectedItem) => removeNotEligible(selectedList, selectedItem)}\n                            />\n                            <input type=\"text\" name=\"belowPackage\" placeholder=\"package\"\n                                vaue={belowPackage} onChange={e => changeHandler(e)} />\n                        </div>\n                        <div>\n                        </div>\n\n                    </div>\n                    <div className=\"send-button\">\n                        <button className=\"Btn Btn-send\">Send</button>\n                    </div>\n                </form>\n            </div>\n        </div >\n    )\n}\nconst mapStateToProps = state => ({\n    branch: state.filters.branch,\n    college: state.filters.college,\n    drives: state.filters.drives\n})\nexport default connect(mapStateToProps, { getBranches, getColleges, getDriveFilter, createDrive })(NewDrive)\n","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Auth\\Login.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Records\\StudentDetail.js",["147","148"],"import React, { useEffect } from 'react'\nimport NavBar from '../Layout/Navbar'\nimport { getRecord } from '../../Redux/actions/records'\nimport { connect } from 'react-redux'\nimport Loader from '../Layout/Loader'\nimport { Fragment } from 'react'\nimport Moment from 'react-moment'\nconst StudentDetail = (props) => {\n    useEffect(() => {\n        props.getRecord(props.match.params.id)\n    }, [props.match.params.id])\n    return (\n        <body>\n            <NavBar />\n            {props.record === null ?\n                <Fragment>\n                    <br />\n                    <Loader />\n                </Fragment> : (\n                    <Fragment>\n                        <a onClick={() => props.history.goBack()} style={{ position: 'relative' }} className=\"back a1\">&laquo; Back </a>\n                        <div className=\"details2\" style={{ alignSelf: 'center' }}>\n                            <h1 className=\"heading2\" >Student Details</h1>\n                            <table className=\"detailsTable2\">\n                                <tr>\n                                    <td className=\"fvalue2\">Name</td>\n                                    <td>:</td>\n                                    <td id=\"Name\" className=\"value2\">{props.record.Student_Name ? props.record.Student_Name : null}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">Enrollment No</td>\n                                    <td>:</td>\n                                    <td id=\"Enrollment\" className=\"value2\">{props.record.Enrollment_No}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">Email Id</td>\n                                    <td>:</td>\n                                    <td id=\"Email Id\" className=\"value2\">{props.record.Email_Address}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">Branch</td>\n                                    <td>:</td>\n                                    <td id=\"Branch\" className=\"value2\">{props.record.Branch}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">Gender</td>\n                                    <td>:</td>\n                                    <td id=\"Gender\" className=\"value2\">{props.record.Gender}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">Date Of Birth</td>\n                                    <td>:</td>\n                                    <td id=\"DOB\" className=\"value2\"><Moment format=\"YYYY/MM/DD\">\n                                        {props.record.DOB}</Moment></td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">Contact Number</td>\n                                    <td>:</td>\n                                    <td id=\"Contact_Number\" className=\"value2\">{props.record.Contact_Number}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">Father Name</td>\n                                    <td>:</td>\n                                    <td id=\"Father_Name\" className=\"value2\">{props.record.Father_Name}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">Mother Name</td>\n                                    <td>:</td>\n                                    <td id=\"Mother_Name\" className=\"value2\">{props.record.Mother_Name}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">Present Address</td>\n                                    <td>:</td>\n                                    <td id=\"Present_Address\" style={{ width: '34rem', textAlign: 'left' }} className=\"value2\">{props.record.Present_Address}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">Permanent Address</td>\n                                    <td>:</td>\n                                    <td id=\"Permanent_Address\" style={{ width: '34rem', textAlign: 'left' }} className=\"value2\">{props.record.Permanent_Address}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">10th Percentage</td>\n                                    <td>:</td>\n                                    <td id=\"Class_10th_per\" className=\"value2\">{props.record.Class_10th_per}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">Year Of Passing 10th</td>\n                                    <td>:</td>\n                                    <td id=\"YearOfPassing_10th\" className=\"value2\"><Moment format=\"YYYY\">{props.record.Year_of_Passing_10th}</Moment></td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">10th Board</td>\n                                    <td>:</td>\n                                    <td id=\"10tt_Board\" className=\"value2\">{props.record._10th_Board}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">Class 12th Percentage</td>\n                                    <td>:</td>\n                                    <td id=\"Class_12th_per\" className=\"value2\">{props.record.Class_12th_per}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">Year Of Passing 12th</td>\n                                    <td>:</td>\n                                    <td id=\"YearOfPassing_12th\" className=\"value2\"><Moment format=\"YYYY\">{props.record.Year_of_Passing_10th}</Moment></td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">12th Board</td>\n                                    <td>:</td>\n                                    <td id=\"12th_Board\" className=\"value2\">{props.record._12th_Board}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">Study Gap</td>\n                                    <td>:</td>\n                                    <td id=\"Study_Gap\" className=\"value2\">{props.record.Study_Gap}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">Current CGPA</td>\n                                    <td>:</td>\n                                    <td id=\"Current_CGPA\" className=\"value2\">{props.record.Current_CGPA_aggregate}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">Backlogs</td>\n                                    <td>:</td>\n                                    <td id=\"Backlogs\" className=\"value2\">{props.record.Number_of_Backlogs}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">SGPA 1</td>\n                                    <td>:</td>\n                                    <td id=\"Sem1_SGPA\" className=\"value2\">{props.record.Sem_1_SGPA}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">SGPA 2</td>\n                                    <td>:</td>\n                                    <td id=\"Sem2_SGPA\" className=\"value2\">{props.record.Sem_2_SGPA}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">SGPA 3</td>\n                                    <td>:</td>\n                                    <td id=\"Sem3_SGPA\" className=\"value2\">{props.record.Sem_3_SGPA}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">SGPA 4</td>\n                                    <td>:</td>\n                                    <td id=\"Sem1_SGPA\" className=\"value2\">{props.record.Sem_4_SGPA}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">SGPA 5</td>\n                                    <td>:</td>\n                                    <td id=\"Sem1_SGPA\" className=\"value2\">{props.record.Sem_5_SGPA}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">Placed</td>\n                                    <td>:</td>\n                                    <td id=\"isPlaced\" className=\"value2\">{props.record.isPlaced ? 'Yes' : 'No'}</td>\n                                </tr>\n                                <tr>\n                                    <td className=\"fvalue2\">Placed In</td>\n                                    <td>:</td>\n                                    <td id=\"placedIn\" className=\"value2\">{props.record.placedIn ?\n                                        props.record.placedIn.map(placed => placed) : '-'\n                                    }</td>\n                                </tr>\n                            </table>\n\n                        </div>\n                    </Fragment>\n                )}\n\n            <br />\n            <br />\n        </body >)\n}\nconst mapStateToProps = state => ({\n    record: state.records.record,\n    loading: state.records.loading\n})\nexport default connect(mapStateToProps, { getRecord })(StudentDetail)\n","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Layout\\Home.js",["149","150"],"import React from 'react'\nimport img from '../assets/456.jpg'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { logout } from '../../Redux/actions/auth'\nconst Home = (props) => {\n    const logoutHandler = (e) => {\n        e.preventDefault();\n        props.logout();\n    }\n    return (\n        <body className=\"homeClass\">\n            <header className='topHome'>\n                <div className=\"logo\">\n                    <img src={img} width=\"50\" height=\"50\" />\n                    <p>Oriental Group of <br />Institutes</p>\n                </div>\n            </header>\n            <div className=\"bottom\">\n                <p>Training & Placement <br /> Cell</p>\n                <div className=\"menu\">\n                    <h4>MENU</h4>\n                    <ul>\n                        <Link to='/records'>\n                            <li>Records</li>\n                        </Link>\n                        <Link to='/drives'>\n                            <li>Drives</li>\n                        </Link>\n                        <Link to='/volAttendance'>\n                            <li>Volunteer Attendance</li>\n                        </Link>\n                    </ul>\n                    <a onClick={e => logoutHandler(e)} className='logoutbtn'>LOGOUT</a>\n                </div>\n            </div>\n        </body>\n    )\n}\n\nexport default connect(null, { logout })(Home)\n","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Records\\Records.js",["151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166"],"import React, { useEffect, useState } from 'react'\nimport Navbar from '../Layout/Navbar'\nimport DataTable from './DataTable'\nimport { connect } from 'react-redux'\nimport { getRecords } from '../../Redux/actions/records'\nimport Menubar from '../Layout/Menubar'\nimport Backdrop from '../Layout/Backdrop'\nimport Loader from '../Layout/Loader'\nimport { Link } from 'react-router-dom'\nimport { Fragment } from 'react'\nconst Records = (props) => {\n    const [filterData, setFilterData] = useState({\n        college: '',\n        branch: '',\n        placedIn: '',\n        placed: false,\n        ipp: null,\n        pageNo: 1,\n        filtertype: ''\n    })\n    const { placed, pageNo } = filterData;\n    const [toggleMenu, setToggle] = useState(false)\n    const [searchType, setSearchType] = useState('name')\n    const [searchValue, setSearchValue] = useState('');\n    useEffect(() => {\n        props.getRecords();\n    }, [])\n    const toggleHandler = (e) => {\n        setData();\n        setToggle(!toggleMenu)\n    }\n    const closeHandler = e => {\n        setToggle(false)\n    }\n    const changeHandler = e => {\n        setSearchValue(e.target.value)\n    }\n    const changeType = e => {\n        setSearchType(e.target.value)\n    }\n    const selectBranch = (selectedList, selectedItem) => {\n        setFilterData({ ...filterData, ['branch']: selectedItem.label })\n    }\n    const selectCollege = (selectedList, selectedItem) => {\n        setFilterData({ ...filterData, ['college']: selectedItem.label })\n    }\n    const selectDrive = (selectedList, selectedItem) => {\n        setFilterData({ ...filterData, ['placedIn']: selectedItem._id })\n    }\n    const removeBranch = (selectedList, selectedItem) => {\n        // setFilterData({ ...filterData, ['branch']: filterData.branch.filter(branch => selectedItem.label !== branch) })\n        setFilterData({ ...filterData, ['branch']: null })\n    }\n    const removeCollege = (selectedList, selectedItem) => {\n        setFilterData({ ...filterData, ['college']: null })\n    }\n    const removeDrive = (selectedList, selectedItem) => {\n        setFilterData({ ...filterData, ['placedIn']: null })\n    }\n    const setPlacementStatus = (e) => {\n        setFilterData({ ...filterData, ['placed']: !filterData.placed })\n    }\n    let data = '';\n    if (searchType == 'enrollment') {\n        data = searchValue + \",,\";\n    }\n    else if (searchType == 'name') {\n        data = \",\" + searchValue + \",\"\n    }\n    else if (searchType == 'email') {\n        data = \",,\" + searchValue\n    }\n    const setData = e => {\n        setFilterData({ ...filterData, ['filtertype']: data });\n    }\n    const submitFilter = (e) => {\n        e.preventDefault();\n        setFilterData({ ...filterData, ['filtertype']: data });\n        props.getRecords(filterData);\n        setToggle(false);\n        setFilterData({\n            college: '',\n            branch: '',\n            placedIn: '',\n            placed: false,\n            ipp: null,\n            pageNo: 1,\n            filtertype: ''\n        })\n    }\n    const next = e => {\n        if (pageNo <= props.totalPage)\n            filterData.pageNo++;\n        e.preventDefault();\n        setFilterData({ ...filterData, ['filtertype']: data });\n        props.getRecords(filterData);\n        setToggle(false);\n    }\n    const prev = e => {\n        if (pageNo > 0)\n            filterData.pageNo--;\n        e.preventDefault();\n        setFilterData({ ...filterData, ['filtertype']: data });\n        props.getRecords(filterData);\n        setToggle(false);\n    }\n    return (\n        <div>\n            <Navbar />\n            <div className=\"second\">\n                <button className=\"openbtn\" onClick={(e) => toggleHandler(e)}>☰</button>\n                <Link to=\"/add-new-record\" className=\"addNew\">ADD STUDENT</Link>\n            </div>\n            {toggleMenu === true ? <Fragment>\n                {/* <Backdrop /> */}\n                <Menubar\n                    close={e => closeHandler(e)}\n                    selectCollege={(i, j) => selectCollege(i, j)}\n                    removeCollege={(i, j) => removeCollege(i, j)}\n                    selectBranch={(i, j) => selectBranch(i, j)}\n                    removeBranch={(i, j) => removeBranch(i, j)}\n                    selectDrive={(i, j) => selectDrive(i, j)}\n                    removeDrive={(i, j) => removeDrive(i, j)}\n                    check={placed}\n                    placemenStatus={(e) => setPlacementStatus(e)}\n                    submitFilter={(e) => submitFilter(e)}\n                />\n\n            </Fragment> : null}\n            <div className=\"search\">\n                <div className=\"searchBox\">\n                    <input type=\"text\" name=\"searchValue\" value={searchValue}\n                        onChange={e => changeHandler(e)} placeholder=\"Search..\" />\n                    <button type=\"submit\" className=\"submitBtn\"><i className=\"fa fa-search\"></i></button>\n                </div>\n                <select name=\"searchType\" id=\"search\" value={searchType} onChange={e => changeType(e)}>\n                    <option value=\"name\">Name</option>\n                    <option value=\"enrollment\">Enrollment</option>\n                    <option value=\"email\">EMail</option>\n                </select>\n            </div>\n\n            <div className=\"records\">\n                {props.loading ? <Loader /> :\n                    <table className=\"recordsTable\">\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Enrollment Number</th>\n                                <th>Email</th>\n                                <th>Branch</th>\n                                <th>Contact Number</th>\n                                <th>Placement Status</th>\n                                <th>PlacedIn</th>\n                                <th>Package</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {props.records ? props.records.map(record =>\n                                <DataTable key={record._id} value={record} />) : <Loader />}\n                        </tbody>\n\n\n                    </table>\n                }\n\n            </div>\n\n            <div className=\"pagination\">\n                <button className=\"previous\" onClick={(e) => prev(e)} >&laquo; Previous</button>\n                <button className=\"next\" onClick={(e) => next(e)}>Next &raquo;</button>\n\n            </div>\n        </div >\n    )\n}\n\nconst mapStateToProps = state => ({\n    records: state.records.records,\n    loading: state.records.loading,\n    totalPage: state.records.totalPage\n})\nexport default connect(mapStateToProps, { getRecords })(Records)\n","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\actions\\auth.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\reducers\\index.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\actions\\records.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Layout\\Alert.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Layout\\Loader.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\actions\\drives.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Drives\\Drive.js",["167"],"import React, { Fragment, useState } from 'react'\nimport Moment from 'react-moment'\nconst Drive = (props) => {\n    const [toggle, setToggle] = useState(false)\n    const [enrollment, setEnrollment] = useState(null);\n    // console.log(props)\n    const changeHandler = e => {\n        setEnrollment([e.target.name] = e.target.value)\n    }\n    const saveHandler = e => {\n        e.preventDefault();\n        let id = props.drive._id;\n        props.enroll(id, enrollment);\n        setEnrollment(null);\n        setToggle(false);\n    }\n    const deleteHandler = e => {\n        e.preventDefault();\n        let id = props.drive._id;\n        props.delete(id);\n    }\n    return (\n        <div className=\"CardHolder-card\">\n            <h4>{props.drive.companyName}</h4>\n            <article>{props.drive.desc}</article>\n            <div className=\"Flex Flex-aligned ContentHead\">\n                <div className=\"Flex Flex-aligned\">\n                    <span>Package: </span>\n                    <p>{props.drive.package}</p>\n                </div>\n                <div className=\"Flex Flex-aligned\">\n                    <span>Date:</span>\n                    <Moment format='YYYY/MM/DD'>{props.drive.Date}</Moment>\n                </div>\n            </div>\n            <div className=\"Flex Flex-aligned ContentHead\">\n                <div className=\"Flex Flex-aligned\">\n                    <span>Courses: </span>\n                    {props.drive.course.map(course => <p>{course}</p>)}\n                </div>\n                <div className=\"Flex Flex-aligned\">\n                    <span>Branch:</span>\n                    {props.drive.branch.map(branch => <p>{`${branch}`}.</p>)}\n                </div>\n            </div>\n            <div className=\"Flex Flex-aligned ContentHead\">\n                <div className=\"Flex Flex-aligned\">\n                    <span>HSC: </span>\n                    <p>{props.drive.eligibility.hsc ? props.drive.eligibility.hsc : <p>None</p>}</p>\n                </div>\n                <div className=\"Flex Flex-aligned\">\n                    <span>SSC: </span>\n                    <p>{props.drive.eligibility.ssc ? props.drive.eligibility.ssc : <p>None</p>}</p>\n                </div>\n                <div className=\"Flex Flex-aligned\">\n                    <span>Aggregate CGPA UG: </span>\n                    <p>{props.drive.eligibility.graduation ? props.drive.eligibility.graduation : <p>None</p>}</p>\n                </div>\n            </div>\n            <div className=\"Flex Flex-aligned Flex-center\">\n                <button className=\"Btn Btn-success\" onClick={() => setToggle(!toggle)}>Add Enrollment Number</button>\n                <button className=\"Btn Btn-danger\" onClick={e => deleteHandler(e)}>Delete Drive</button>\n            </div>\n            {toggle ? (\n                <div className=\"Enroll\">\n                    <textarea type=\"text\" name=\"enrollment\" value={enrollment} onChange={e => changeHandler(e)} />\n                    <button onClick={(e) => saveHandler(e)}>Save</button>\n                </div>\n            ) : ' '}\n        </div >\n    )\n}\n\nexport default Drive\n","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Layout\\Navbar.js",["168","169"],"import React from 'react'\nimport img from '../assets/456.jpg'\nimport { Link } from 'react-router-dom'\nimport { logout } from '../../Redux/actions/auth'\nimport { connect } from 'react-redux'\nconst Navbar = (props) => {\n    const logoutHandler = (e) => {\n        e.preventDefault();\n        props.logout();\n    }\n    return (\n        <header class=\"top\">\n            <div class=\"navbar\">\n                <img src={img} width=\"45\" height=\"50\" />\n                <ul style={{ alignItems: 'center' }}>\n                    <li><Link to=\"/records\">RECORDS</Link></li>\n                    <li><Link to=\"/drives\">DRIVES</Link></li>\n                    <li><Link to=\"/home\">HOME</Link></li>\n                </ul>\n            </div>\n            <a onClick={e => logoutHandler(e)} class='logoutbtn'>LOGOUT</a>\n        </header>\n    )\n}\n\nexport default connect(null, { logout })(Navbar)\n","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\actions\\filters.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Records\\DataTable.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Layout\\Backdrop.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Component\\Layout\\Menubar.js",["170","171","172","173","174"],"import React, {\n    useEffect, useState\n} from 'react'\nimport { Multiselect } from 'multiselect-react-dropdown'\nimport { connect } from 'react-redux'\nimport { getBranches, getColleges, getDriveFilter } from '../../Redux/actions/filters'\nimport Backdrop from './Backdrop'\nconst Menubar = (props) => {\n    useEffect(() => {\n        props.getBranches()\n    }, [props.getBranches])\n    useEffect(() => {\n        props.getColleges()\n    }, [props.getColleges])\n    useEffect(() => {\n        props.getDriveFilter()\n    }, [props.getDriveFilter])\n    // const submitFilter = (e) => {\n    //     e.preventDefault();\n    //     console.log(filterData)\n    // }\n    return (\n        <div>\n            <div className='second'>\n\n                <form div id=\"mySidepanel\" className=\"sidepanel\" onSubmit={e => props.submitFilter(e)} >\n                    <a href=\"#\" className=\"closebtn\" onClick={props.close}>×</a>\n                    <div className=\"filters\">\n                        <Multiselect style={{\n                            alignItems: 'centre',\n                            searchBox: {\n                                fontSize: 'large', height: '3rem',\n                                overflowY: 'scroll', border: 'none', overflowX: 'hidden',\n                            },\n                            chips: { marginBottom: '0.5rem' }\n                        }} options={props.college}\n                            displayValue=\"label\"\n                            placeholder=\"College\"\n                            singleSelect={true}\n                            showArrow\n                            onSelect={(selectedList, selectedItem) => props.selectCollege(selectedList, selectedItem)}\n                            onRemove={(selectedList, selectedItem) => props.removeCollege(selectedList, selectedItem)}\n                        />\n                        <br />\n                        <Multiselect\n                            style={{\n                                searchBox: {\n                                    fontSize: 'large', height: '3rem',\n                                    overflowY: 'scroll', border: 'none', overflowX: 'hidden',\n                                },\n                                chips: { marginBottom: '0.5rem' }\n                            }} options={props.branch}\n                            displayValue=\"label\"\n                            singleSelect={true}\n                            loading={!props.branch}\n                            placeholder=\"Branch\"\n                            name='branch'\n                            showArrow\n                            onSelect={(selectedList, selectedItem) => props.selectBranch(selectedList, selectedItem)}\n                            onRemove={(selectedList, selectedItem) => props.removeBranch(selectedList, selectedItem)}\n                        />\n                        <br />\n                        <Multiselect style={{\n                            searchBox: {\n                                fontSize: 'large', height: '3rem',\n                                overflowY: 'scroll', border: 'none', overflowX: 'hidden',\n                            },\n                            chips: { marginBottom: '0.5rem' }\n                        }} options={props.drives}\n                            singleSelect={true}\n                            displayValue=\"label\"\n                            showArrow\n                            hidePlaceHolder\n                            placeholder=\"Already place In\"\n                            onSelect={(selectedList, selectedItem) => props.selectDrive(selectedList, selectedItem)}\n                            onRemove={(selectedList, selectedItem) => props.removeDrive(selectedList, selectedItem)}\n                        />\n                        <div className=\"checkbox\">\n                            <input type=\"checkbox\" id=\"unplaced\" name=\"unplaced\" value={props.check}\n                                onChange={(e) => props.placemenStatus(e)}\n                            />\n                            <label >PLACED</label></div>\n                    </div>\n                    <button className=\"apply\" >APPLY</button>\n                </form>\n            </div >\n            <Backdrop show={true} />\n        </div>\n    )\n}\nconst mapStateToProps = state => ({\n    branch: state.filters.branch,\n    college: state.filters.college,\n    drives: state.filters.drives\n})\nexport default connect(mapStateToProps, { getBranches, getColleges, getDriveFilter })(Menubar)\n","C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\actions\\types.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\actions\\alerts.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\reducers\\filters.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\reducers\\alerts.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\reducers\\drives.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\reducers\\auth.js",[],"C:\\Users\\ASUS\\OneDrive\\Desktop\\Placement-Portal\\client\\src\\Redux\\reducers\\records.js",["175","176"],"import { GET_RECORDS, RECORDS_ERROR, ADD_RECORD, ADD_RECORD_ERROR, GET_RECORD, RECORD_ERROR } from '../actions/types'\n\nconst initialState = {\n    records: [],\n    record: null,\n    totalPage: null,\n    loading: true,\n    msg: {},\n    err: {}\n}\n\nconst records = (state = initialState, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case GET_RECORDS:\n            return {\n                ...state,\n                records: payload[0],\n                loading: false,\n                record: null,\n                totalPage: payload[1].totalPage\n            }\n        case ADD_RECORD:\n            return {\n                ...state,\n                msg: payload,\n                loading: false\n            }\n        case GET_RECORD:\n            return {\n                ...state,\n                record: payload,\n                loading: false\n            }\n        case RECORDS_ERROR:\n            return {\n                ...state,\n                record: null,\n                loading: false\n            }\n        case ADD_RECORD_ERROR:\n            return {\n                ...state,\n                err: payload,\n                loading: false\n            }\n        case RECORDS_ERROR:\n            return {\n                ...state,\n                records: [],\n                loading: false,\n                totalPage: 0\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\nexport default records",{"ruleId":"177","severity":1,"message":"178","line":77,"column":13,"nodeType":"179","endLine":77,"endColumn":75},{"ruleId":"180","severity":1,"message":"181","line":12,"column":8,"nodeType":"182","endLine":12,"endColumn":10,"suggestions":"183"},{"ruleId":"180","severity":1,"message":"184","line":30,"column":8,"nodeType":"182","endLine":30,"endColumn":10,"suggestions":"185"},{"ruleId":"180","severity":1,"message":"184","line":33,"column":8,"nodeType":"182","endLine":33,"endColumn":10,"suggestions":"186"},{"ruleId":"180","severity":1,"message":"184","line":36,"column":8,"nodeType":"182","endLine":36,"endColumn":10,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":42,"column":36,"nodeType":"190","messageId":"191","endLine":42,"endColumn":79,"fix":"192"},{"ruleId":"188","severity":1,"message":"193","line":45,"column":36,"nodeType":"190","messageId":"191","endLine":45,"endColumn":79,"fix":"194"},{"ruleId":"188","severity":1,"message":"195","line":48,"column":36,"nodeType":"190","messageId":"191","endLine":48,"endColumn":81,"fix":"196"},{"ruleId":"188","severity":1,"message":"189","line":51,"column":36,"nodeType":"190","messageId":"191","endLine":51,"endColumn":111,"fix":"197"},{"ruleId":"188","severity":1,"message":"193","line":54,"column":36,"nodeType":"190","messageId":"191","endLine":54,"endColumn":111,"fix":"198"},{"ruleId":"188","severity":1,"message":"195","line":57,"column":36,"nodeType":"190","messageId":"191","endLine":57,"endColumn":109,"fix":"199"},{"ruleId":"180","severity":1,"message":"184","line":11,"column":8,"nodeType":"182","endLine":11,"endColumn":31,"suggestions":"200"},{"ruleId":"177","severity":1,"message":"178","line":21,"column":25,"nodeType":"179","endLine":21,"endColumn":120},{"ruleId":"201","severity":1,"message":"202","line":15,"column":21,"nodeType":"179","endLine":15,"endColumn":61},{"ruleId":"177","severity":1,"message":"178","line":34,"column":21,"nodeType":"179","endLine":34,"endColumn":78},{"ruleId":"203","severity":1,"message":"204","line":7,"column":8,"nodeType":"205","messageId":"206","endLine":7,"endColumn":16},{"ruleId":"180","severity":1,"message":"184","line":27,"column":8,"nodeType":"182","endLine":27,"endColumn":10,"suggestions":"207"},{"ruleId":"188","severity":1,"message":"189","line":42,"column":40,"nodeType":"190","messageId":"191","endLine":42,"endColumn":70,"fix":"208"},{"ruleId":"188","severity":1,"message":"209","line":45,"column":40,"nodeType":"190","messageId":"191","endLine":45,"endColumn":71,"fix":"210"},{"ruleId":"188","severity":1,"message":"195","line":48,"column":40,"nodeType":"190","messageId":"191","endLine":48,"endColumn":70,"fix":"211"},{"ruleId":"188","severity":1,"message":"189","line":52,"column":40,"nodeType":"190","messageId":"191","endLine":52,"endColumn":56,"fix":"212"},{"ruleId":"188","severity":1,"message":"209","line":55,"column":40,"nodeType":"190","messageId":"191","endLine":55,"endColumn":57,"fix":"213"},{"ruleId":"188","severity":1,"message":"195","line":58,"column":40,"nodeType":"190","messageId":"191","endLine":58,"endColumn":58,"fix":"214"},{"ruleId":"188","severity":1,"message":"215","line":61,"column":40,"nodeType":"190","messageId":"191","endLine":61,"endColumn":70,"fix":"216"},{"ruleId":"217","severity":1,"message":"218","line":64,"column":20,"nodeType":"219","messageId":"220","endLine":64,"endColumn":22},{"ruleId":"217","severity":1,"message":"218","line":67,"column":25,"nodeType":"219","messageId":"220","endLine":67,"endColumn":27},{"ruleId":"217","severity":1,"message":"218","line":70,"column":25,"nodeType":"219","messageId":"220","endLine":70,"endColumn":27},{"ruleId":"188","severity":1,"message":"221","line":74,"column":40,"nodeType":"190","messageId":"191","endLine":74,"endColumn":60,"fix":"222"},{"ruleId":"188","severity":1,"message":"221","line":78,"column":40,"nodeType":"190","messageId":"191","endLine":78,"endColumn":60,"fix":"223"},{"ruleId":"188","severity":1,"message":"221","line":95,"column":40,"nodeType":"190","messageId":"191","endLine":95,"endColumn":60,"fix":"224"},{"ruleId":"188","severity":1,"message":"221","line":103,"column":40,"nodeType":"190","messageId":"191","endLine":103,"endColumn":60,"fix":"225"},{"ruleId":"203","severity":1,"message":"226","line":1,"column":17,"nodeType":"205","messageId":"206","endLine":1,"endColumn":25},{"ruleId":"201","severity":1,"message":"202","line":14,"column":17,"nodeType":"179","endLine":14,"endColumn":57},{"ruleId":"177","severity":1,"message":"178","line":21,"column":13,"nodeType":"179","endLine":21,"endColumn":66},{"ruleId":"203","severity":1,"message":"227","line":2,"column":16,"nodeType":"205","messageId":"206","endLine":2,"endColumn":24},{"ruleId":"180","severity":1,"message":"184","line":11,"column":8,"nodeType":"182","endLine":11,"endColumn":27,"suggestions":"228"},{"ruleId":"180","severity":1,"message":"184","line":14,"column":8,"nodeType":"182","endLine":14,"endColumn":27,"suggestions":"229"},{"ruleId":"180","severity":1,"message":"184","line":17,"column":8,"nodeType":"182","endLine":17,"endColumn":30,"suggestions":"230"},{"ruleId":"177","severity":1,"message":"231","line":27,"column":21,"nodeType":"179","endLine":27,"endColumn":76},{"ruleId":"203","severity":1,"message":"232","line":1,"column":80,"nodeType":"205","messageId":"206","endLine":1,"endColumn":92},{"ruleId":"233","severity":1,"message":"234","line":47,"column":9,"nodeType":"235","messageId":"220","endLine":53,"endColumn":14},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDrives'. Either include it or remove the dependency array. If 'getDrives' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["236"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["237"],["238"],["239"],"no-useless-computed-key","Unnecessarily computed property ['branch'] found.","Property","unnecessarilyComputedProperty",{"range":"240","text":"241"},"Unnecessarily computed property ['course'] found.",{"range":"242","text":"243"},"Unnecessarily computed property ['placedIn'] found.",{"range":"244","text":"245"},{"range":"246","text":"241"},{"range":"247","text":"243"},{"range":"248","text":"245"},["249"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'Backdrop' is defined but never used.","Identifier","unusedVar",["250"],{"range":"251","text":"241"},"Unnecessarily computed property ['college'] found.",{"range":"252","text":"253"},{"range":"254","text":"245"},{"range":"255","text":"241"},{"range":"256","text":"253"},{"range":"257","text":"245"},"Unnecessarily computed property ['placed'] found.",{"range":"258","text":"259"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Unnecessarily computed property ['filtertype'] found.",{"range":"260","text":"261"},{"range":"262","text":"261"},{"range":"263","text":"261"},{"range":"264","text":"261"},"'Fragment' is defined but never used.","'useState' is defined but never used.",["265"],["266"],["267"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'RECORD_ERROR' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase",{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"270","fix":"272"},{"desc":"270","fix":"273"},[1270,1280],"'branch'",[1418,1428],"'course'",[1570,1582],"'placedIn'",[1719,1729],[1899,1909],[2083,2095],{"desc":"274","fix":"275"},{"desc":"270","fix":"276"},[1320,1330],[1459,1470],"'college'",[1597,1609],[1858,1868],[1983,1994],[2107,2119],[2214,2224],"'placed'",[2578,2592],"'filtertype'",[2710,2724],[3178,3192],[3421,3435],{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},"Update the dependencies array to be: [getDrives]",{"range":"283","text":"284"},"Update the dependencies array to be: [props]",{"range":"285","text":"286"},{"range":"287","text":"286"},{"range":"288","text":"286"},"Update the dependencies array to be: [props, props.match.params.id]",{"range":"289","text":"290"},{"range":"291","text":"286"},"Update the dependencies array to be: [props, props.getBranches]",{"range":"292","text":"293"},"Update the dependencies array to be: [props, props.getColleges]",{"range":"294","text":"295"},"Update the dependencies array to be: [props, props.getDriveFilter]",{"range":"296","text":"297"},[499,501],"[getDrives]",[937,939],"[props]",[998,1000],[1062,1064],[389,412],"[props, props.match.params.id]",[912,914],[357,376],"[props, props.getBranches]",[435,454],"[props, props.getColleges]",[516,538],"[props, props.getDriveFilter]"]